name: Release Workflow

on:
  workflow_run:
    workflows: ["Auto Tag"]
    types:
      - completed

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Install type definitions
      run: npm install --save-dev @types/node @types/fs-extra

    - name: Compile TypeScript
      run: npx tsc

    - name: Lint with eslint
      run: npm run lint

    - name: Run tests
      run: npm run test

  prepare-release:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      new_tag: ${{ steps.set_tag.outputs.tag }}  # Updated this line to use the set_tag step

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download tag artifact
      uses: actions/download-artifact@v2
      with:
        name: tag

    - name: Set the tag
      id: set_tag
      run: |
        TAG=$(cat tag.txt)
        echo "::set-output name=tag::$TAG"

    - name: Use computed tag
      run: |
        echo "Next tag will be: ${{ steps.set_tag.outputs.tag }}"  # Updated this line to use the set_tag step

    - name: Create release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_tag.outputs.tag }}  # Updated this line to use the set_tag step
        release_name: Release ${{ steps.set_tag.outputs.tag }}  # Updated this line to use the set_tag step
        draft: true
        prerelease: false

  build-and-release:
    needs: prepare-release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build with pkg
      run: |
        npm i
        npx tsc
        npm install -g pkg
        pkg . -t node18-linux-x64 --output ./oasfi-linux
        pkg . -t node18-macos-x64 --output ./oasfi-macos
        pkg . -t node18-win-x64 --output ./oasfi.exe

    - name: Create GitHub Release and Upload binaries/source
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.prepare-release.outputs.new_tag }}
        files: |
          ./oasys-csv-cli-linux,
          ./oasys-csv-cli-macos,
          ./oasys-csv-cli-win.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
